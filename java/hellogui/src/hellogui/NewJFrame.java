/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hellogui;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author owner
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }
    
    private int decSelected = 0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        b = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        a = new javax.swing.JTextArea();
        enc = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lora");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(0, 0, 50));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSlider1.setForeground(new java.awt.Color(255, 204, 51));
        jSlider1.setMajorTickSpacing(2);
        jSlider1.setMaximum(5);
        jSlider1.setMinimum(1);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(1);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 35, -1, 90));

        jLabel1.setBackground(new java.awt.Color(222, 222, 222));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Input");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 13, -1, -1));

        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Convert");
        jButton1.setBorder(null);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 85, 91));

        jLabel2.setBackground(new java.awt.Color(222, 222, 222));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Output");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        b.setEditable(false);
        b.setColumns(5);
        b.setLineWrap(true);
        b.setRows(5);
        jScrollPane1.setViewportView(b);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 410, -1));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setViewportBorder(new javax.swing.border.MatteBorder(null));

        a.setColumns(5);
        a.setForeground(new java.awt.Color(18, 30, 49));
        a.setLineWrap(true);
        a.setRows(4);
        a.setCaretColor(new java.awt.Color(18, 30, 49));
        a.setSelectedTextColor(new java.awt.Color(30, 18, 49));
        jScrollPane2.setViewportView(a);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 35, 230, 90));

        enc.setForeground(new java.awt.Color(255, 255, 255));
        enc.setText("Decrypt");
        enc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encActionPerformed(evt);
            }
        });
        jPanel1.add(enc, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 91));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        String tempStr = a.getText();
        String recognitionString = "fasdlfnbjdalsjkfnblaks";
        
        if (decSelected == 1) { // Error Detected when decrypting code that has been encrypted multiple times          
            List<String> tempList = new ArrayList<>(Arrays.asList(tempStr.split(recognitionString)));
            System.out.println("0 = " + tempList);
            boolean error = false;
            
            try {
                while (Integer.valueOf(tempList.get(0)) > 0) {
                    // Decrypting Code
                    tempList = new ArrayList<>(Arrays.asList(tempStr.split(recognitionString)));
                    System.out.println("1 = " + tempList);
                    List<String> text = new ArrayList<>(Arrays.asList(tempList.get(1).split("")));
                    System.out.println("2 = " + text.size());
                    List<String> order = new ArrayList<>(Arrays.asList(tempList.get(2).split(",")));    
                    System.out.println("3 = " + order.size());
                    List<String> temp = new ArrayList<>();
                    for (String tn : order) {
                        try {
                            Integer.valueOf(tn);
                        } catch (NumberFormatException nfe){
                            error = true;
                        }
                    }
                    System.out.println(tempList.size());
                    if (!(tempList.size() == 3) || !(text.size() == order.size()) || error) {
                        tempStr = "Error; Wrong code";
                        break;
                    }

                    for (int i = 0; i < text.size(); i++) {
                        temp.add(text.get(order.indexOf(String.valueOf(i))));
                    }
                    tempList.set(1, String.join("", temp));
                    tempList.remove(2);              
                    // Controlling initial number                                
                    if (Integer.parseInt(tempList.get(0)) == 1) {
                        tempList.remove(0);
                        tempStr = String.join("",tempList);  
                        break;
                    } else {
                        tempList.set(0, String.valueOf(Integer.parseInt(tempList.get(0)) - 1));
                    }
                    tempStr = String.join("",tempList);
                    System.out.println("4 = " + tempStr);
                }
            } catch(NumberFormatException | ArrayIndexOutOfBoundsException nfe) {
                tempStr = "Error; Wrong code";
            }
            b.setText(tempStr);
        } else {
            System.out.println(jSlider1.getValue());
            for (int sd = 0; sd < jSlider1.getValue(); sd++) {
                // encryped code will have form of int + encrypted code;          
            List<String> tempList;
            List<String> temp = new ArrayList<>();
            
            int in = 0;
            List<String> chk = new ArrayList<>(Arrays.asList(tempStr.split(recognitionString)));
            if (chk.size() > 1) {
                in = Integer.parseInt(chk.get(0));
                chk.remove(0);
                tempList = new ArrayList<>(Arrays.asList((recognitionString + chk.get(0) + recognitionString + chk.get(1)).split("")));
            } else {
                tempList = new ArrayList<>(Arrays.asList(tempStr.split("")));
            }
            
            while(temp.size() < tempList.size()) {
                int tr = ThreadLocalRandom.current().nextInt(0, tempList.size());
                if (temp.indexOf(String.valueOf(tr)) == -1) {
                    temp.add(String.valueOf(tr));
                }
            }
            System.out.println(temp);
            String num = recognitionString + String.join(",", temp);
                        
            for (int i = 0; i < tempList.size(); i++) {
                temp.set(temp.indexOf(String.valueOf(i)), tempList.get(i));
            }
            
            if (in == 0) {
                temp.add(0, "1" + recognitionString);
            } else {
                in++;
                temp.add(0, String.valueOf(in) + recognitionString);
            }
            String text = String.join("", temp);
            
            System.out.println(num + " / " + text);
            tempStr = text + num;
            }
        b.setText(tempStr);
        }
    }//GEN-LAST:event_jButton1MousePressed

    private void encActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encActionPerformed
        // TODO add your handling code here:
        if (decSelected == 0) {
            decSelected++;
        } else {
            decSelected--;
        }        
    }//GEN-LAST:event_encActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        System.out.println(ThreadLocalRandom.current().nextInt(1, 10 + 1));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea a;
    private javax.swing.JTextArea b;
    private javax.swing.JToggleButton enc;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables
}
